---
import { getCollection } from 'astro:content';
import type {CollectionEntry } from 'astro:content';

import Layout from '../../layouts/Layout.astro';
import Header from '../../components/sections/Header.astro';
import Footer from '../../components/sections/Footer.astro';

export const getStaticPaths = async () => {
    const blogs = await getCollection("blogs");
    const paths = blogs.map(blog => {
        return {
            params: {
                slug: blog.slug
            },
            props: {
                blog
            }
        }
    });

    return paths;
}

type Props = {
    blog: CollectionEntry<"blogs">
}

const {blog} = Astro.props;
const {Content} = await blog.render();
---

<Layout title={blog.data.title}>
    <Header />
    <section class="flex justify-center mt-12">
        <div id="markdown" class="prose prose-lg overflow-visible relative mb-5">
            <Content />
        </div>
    </section>
    <Footer />

    <script is:inline>
        const applyThemeStyles = () => {
            const savedTheme = localStorage.getItem("theme");
            const markdownElement = document.getElementById('markdown');
            if (!markdownElement) {
                return;
            }

            if (savedTheme === 'dark') {
                markdownElement.classList.add('prose-invert');
            } else {
                markdownElement.classList.remove('prose-invert');
            }
        };

        applyThemeStyles();
    </script>
</Layout>